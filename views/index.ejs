<!DOCTYPE HTML>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Simple Video Chat</title>
  <script type="text/javascript" src="https://swww.tokbox.com/webrtc/v2.0/js/TB.min.js"></script>
</head>
<body>
  <h1>OpenTok NodeJS Group chat</h1>
  <h4>To go to your own room, simply type: http://.../yourRoomName</h4>
  <h5>Code for this app available on <a href="https://github.com/songz/OpenTokNodeJS">github</a></h5>
  <div id="videos">
    <span id="myPublisherDiv"></span>
  </div>
	
  <script type="text/javascript">
    // Initialize API key, session, and token, generated from server side
    var apiKey = "<%= OpenTokKey %>";
    var sessionId = "<%= sessionId %>";
    var token = "<%= token %>";

    // Enable console logs for debugging
    TB.setLogLevel(TB.DEBUG);

    // Initialize session, set up event listeners, and connect
    var session = TB.initSession(sessionId);
    session.addEventListener('sessionConnected', sessionConnectedHandler);
    session.addEventListener('streamCreated', streamCreatedHandler);
    session.connect(apiKey, token);
    
    function sessionConnectedHandler(event) {
      // Create publisher and start streaming into the session
      var publisher = TB.initPublisher(apiKey, 'myPublisherDiv');
      session.publish(publisher);

      // Subscribe to streams that were in the session when we connected
      subscribeToStreams(event.streams);
    }

    function streamCreatedHandler(event) {
      // Subscribe to any new streams that are created
      subscribeToStreams(event.streams);
    }

    function subscribeToStreams(streams) {
      for (var i = 0; i < streams.length; i++) {
        // Make sure we don't subscribe to ourself
        if (streams[i].connection.connectionId == session.connection.connectionId) {
          return;
        }

        // Create the div to put the subscriber element in to
        var span = document.createElement('span');
        span.setAttribute('id', 'stream' + streams[i].streamId);
        document.body.appendChild(span);

        // Subscribe to the stream
        session.subscribe(streams[i], div.id);
      }
    }
  </script>
</body>
</html>
